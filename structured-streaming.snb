{
  "metadata" : {
    "name" : "structured-streaming",
    "user_save_timestamp" : "1970-01-01T09:00:00.000Z",
    "auto_save_timestamp" : "1970-01-01T09:00:00.000Z",
    "language_info" : {
      "name" : "scala",
      "file_extension" : "scala",
      "codemirror_mode" : "text/x-scala"
    },
    "trusted" : true,
    "customLocalRepo" : null,
    "customRepos" : null,
    "customDeps" : [ "org.apache.spark:spark-streaming_2.1.1:1.2.1", "org.apache.spark:spark-sql-kafka-0-10_2.11:2.1.1" ],
    "customImports" : null,
    "customArgs" : null,
    "customSparkConf" : null
  },
  "cells" : [ {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "53065175121D43038963803CBCECCFB9"
    },
    "cell_type" : "code",
    "source" : "import org.apache.spark.sql.functions.{explode, split}\nimport org.apache.spark.sql.SparkSession",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "import org.apache.spark.sql.functions.{explode, split}\nimport org.apache.spark.sql.SparkSession\n"
    }, {
      "metadata" : { },
      "data" : {
        "text/html" : ""
      },
      "output_type" : "execute_result",
      "execution_count" : 3,
      "time" : "Took: 1 second 81 milliseconds, at 2017-6-5 18:38"
    } ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "presentation" : {
        "tabs_state" : "{\n  \"tab_id\": \"#tab419018691-0\"\n}",
        "pivot_chart_state" : "{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"
      },
      "id" : "73175FEA5A1F47E3B886CA8675B3E9A5"
    },
    "cell_type" : "code",
    "source" : ":dp \"org.apache.spark\" % \"spark-sql-kafka-0-10_2.11\" % \"2.1.1\"",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "globalScope.jars: Array[String] = [Ljava.lang.String;@3aa40146\nres3: List[String] = List(/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/xerial/snappy/snappy-java/1.1.2.6/snappy-java-1.1.2.6.jar, /var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/spark/spark-sql-kafka-0-10_2.11/2.1.1/spark-sql-kafka-0-10_2.11-2.1.1.jar, /var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/spark/spark-tags_2.11/2.1.1/spark-tags_2.11-2.1.1.jar, /var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/scala-lang/scala-library/2.11.8/scala-library-2.11.8.jar,..."
    }, {
      "metadata" : { },
      "data" : {
        "text/html" : "<div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon540a4088ef05cf13a3b927f0ad8b4d37&quot;,&quot;dataInit&quot;:[],&quot;genId&quot;:&quot;419018691&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/tabs'], \n      function(playground, _magictabs) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magictabs,\n    \"o\": {}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <div>\n        <ul class=\"nav nav-tabs\" id=\"ul419018691\"><li>\n              <a href=\"#tab419018691-0\"><i class=\"fa fa-table\"/></a>\n            </li><li>\n              <a href=\"#tab419018691-1\"><i class=\"fa fa-cubes\"/></a>\n            </li></ul>\n\n        <div class=\"tab-content\" id=\"tab419018691\"><div class=\"tab-pane\" id=\"tab419018691-0\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon274f2d420b7991a186fe15265db5691d&quot;,&quot;dataInit&quot;:[{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/xerial/snappy/snappy-java/1.1.2.6/snappy-java-1.1.2.6.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/spark/spark-sql-kafka-0-10_2.11/2.1.1/spark-sql-kafka-0-10_2.11-2.1.1.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/spark/spark-tags_2.11/2.1.1/spark-tags_2.11-2.1.1.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/scala-lang/scala-library/2.11.8/scala-library-2.11.8.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/kafka/kafka-clients/0.10.0.1/kafka-clients-0.10.0.1.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/slf4j/slf4j-api/1.7.16/slf4j-api-1.7.16.jar&quot;},{&quot;string value&quot;:&quot;file:/Users/syahriza/spark-notebook/lib/common.common-0.7.0-scala-2.11.8-spark-2.1.1-hadoop-2.8.0.jar&quot;},{&quot;string value&quot;:&quot;&quot;}],&quot;genId&quot;:&quot;1772776269&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/tableChart'], \n      function(playground, _magictableChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magictableChart,\n    \"o\": {\"headers\":[\"string value\"],\"width\":600,\"height\":400}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon1bd9c902e77e647543c779445c77355c&quot;,&quot;initialValue&quot;:&quot;10&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon131274532746cc36dad16890035010e7&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div><div class=\"tab-pane\" id=\"tab419018691-1\">\n            <div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon5c238335a774631279c71fffde76c2a8&quot;,&quot;dataInit&quot;:[{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/xerial/snappy/snappy-java/1.1.2.6/snappy-java-1.1.2.6.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/spark/spark-sql-kafka-0-10_2.11/2.1.1/spark-sql-kafka-0-10_2.11-2.1.1.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/spark/spark-tags_2.11/2.1.1/spark-tags_2.11-2.1.1.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/scala-lang/scala-library/2.11.8/scala-library-2.11.8.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/apache/kafka/kafka-clients/0.10.0.1/kafka-clients-0.10.0.1.jar&quot;},{&quot;string value&quot;:&quot;/var/folders/v_/p3__wq5j49l786kwm6s0d2bw0000gn/T/spark-notebook/aether/607214d2-08e5-45ed-aede-85b67de825b2/org/slf4j/slf4j-api/1.7.16/slf4j-api-1.7.16.jar&quot;},{&quot;string value&quot;:&quot;file:/Users/syahriza/spark-notebook/lib/common.common-0.7.0-scala-2.11.8-spark-2.1.1-hadoop-2.8.0.jar&quot;},{&quot;string value&quot;:&quot;&quot;}],&quot;genId&quot;:&quot;214018709&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/pivotChart'], \n      function(playground, _magicpivotChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicpivotChart,\n    \"o\": {\"width\":600,\"height\":400,\"derivedAttributes\":{},\"extraOptions\":{}}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anonbb74771a29137a695aa0ab4690db3cd8&quot;,&quot;initialValue&quot;:&quot;10&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anona930c771d2e727421f1691701a9741e8&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div>\n            </div></div>\n      </div>\n    </div></div>"
      },
      "output_type" : "execute_result",
      "execution_count" : 5,
      "time" : "Took: 1 second 556 milliseconds, at 2017-6-5 18:41"
    } ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "2CAED8A5932A481D9F3DA67B3223CF0D"
    },
    "cell_type" : "code",
    "source" : "val spark = SparkSession\n      .builder()\n      .appName(\"Spark structured streaming Kafka example\")\n      .config(\"spark.eventLog.enabled\", \"false\")\n      .master(\"local\")\n      .getOrCreate()\nimport spark.implicits._\nspark.sparkContext.setLogLevel(\"WARN\")\n\nval kafka = spark.readStream\n        .format(\"kafka\")\n        .option(\"kafka.bootstrap.servers\", \"localhost:9092\")\n        .option(\"startingOffsets\", \"latest\")\n        .option(\"subscribe\", \"test\")\n        .load()\n\n    // split lines by whitespace and explode the array as rows of `word`\nval df = kafka.select(explode(split($\"value\".cast(\"string\"), \"\\\\s+\")).as(\"word\"))\n        .groupBy($\"word\")\n        .count\n\nval query = df.select($\"word\", $\"count\").writeStream\n        .outputMode(\"complete\")\n        .format(\"console\")\n        .start()\n\nquery.awaitTermination() ",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "-------------------------------------------\nBatch: 0\n-------------------------------------------\n+----+-----+\n|word|count|\n+----+-----+\n+----+-----+\n\n-------------------------------------------\nBatch: 1\n-------------------------------------------\n+----+-----+\n|word|count|\n+----+-----+\n|hola|    1|\n+----+-----+\n\n-------------------------------------------\nBatch: 2\n-------------------------------------------\n+----+-----+\n|word|count|\n+----+-----+\n|hola|    2|\n+----+-----+\n\n-------------------------------------------\nBatch: 3\n-------------------------------------------\n+----+-----+\n|word|count|\n+----+-----+\n|halo|    1|\n|hola|    2|\n+----+-----+\n\n"
    } ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : true,
      "id" : "7D64547B220648B5837FC9E71DCA00DD"
    },
    "cell_type" : "code",
    "source" : "",
    "outputs" : [ ]
  } ],
  "nbformat" : 4
}